#!/bin/bash

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source /opt/resource/common.sh

# Read inputs
payload=$(mktemp $TMPDIR/helm-resource-request.XXXXXX)
cat > $payload <&0

# Prepare
setup_resource $payload
echo "Resource setup successful."

cat $payload

# Parse parameters
namespace=$(jq -r '.source.namespace // "default"' < $payload)
release=$(jq -r '.source.release // ""' < $payload)

current_release=$(jq -r '.version.release // ""' < $payload)
current_rev=$(jq -r '.version.revision // "0"' < $payload)
current_timestamp=$(jq -r '.version.timestamp // "0"' < $payload)

if [ -z "$release" ]; then
    if [ -z "$current_release" ]; then
      echo '[]' >&3
      exit 0
    else
        jq -n "[{ release: \"$current_release\", revision: \"$current_rev\", timestamp: \"$current_timestamp\" }]" >&3
    fi
else
    rev=$(eval "$helm_request_base history $release" | tail -n 1 | awk '{ print $1 }')
    jq -n "[{ release: \"$release\", revision: \"$rev\" }]" >&3
fi